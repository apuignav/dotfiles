#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Vi mode (http://dougblack.io/words/zsh-vi-mode.html)
bindkey -v

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

#######################################################################
# ZSH
#######################################################################
export KEYTIMEOUT=1
# Use vim cli mode
bindkey '^P' up-history
bindkey '^N' down-history

# backspace and ^h working even after
# returning from command mode
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char

# ctrl-w removed word backwards
bindkey '^w' backward-kill-word
bindkey '^ ' forward-word
bindkey '^b' backward-word

# Last minute binding
bindkey "^[[3~" delete-char

unsetopt SHARE_HISTORY
setopt HIST_IGNORE_SPACE
unsetopt AUTO_NAME_DIRS      # Auto add variable-stored paths to ~ list.
unsetopt COMPLETE_IN_WORD    # Complete from both ends of a word
unsetopt CLOBBER             # Don't overwrite existing files with > and >>
unsetopt PATH_DIRS           # Perform path search even on command names with slashes.
unsetopt FLOW_CONTROL        # Allow C-s and C-q to stop/start the terminal flow

setopt autopushd pushdsilent pushdtohome
# Remove duplicate entries
setopt pushdignoredups
# This reverts the +/- operators.
setopt pushdminus
# Overwrite prezto
for index ({1..9}) unalias "$index"
for index ({1..9}) alias "c$index"="cd -${index}"; unset index

# Report CPU usage for commands running longer than 20 seconds
REPORTTIME=20

# Change suggestion style
ZSH_AUTOSUGGEST_STRATEGY=match_prev_cmd

# Improve vim tab completion 
zstyle ':completion:*:*:vim:*:*files' ignored-patterns '*.pdf'

#######################################################################
# Aliases
#######################################################################
function exists { which $1 &> /dev/null }
# Global aliases
if exists rg; then
    alias -g G=" | rg"
elif exists ag; then
    alias -g G=" | ag"
else
    alias -g G=" | grep"
fi
alias -g P=" | pyp"
alias -g C=" | peco"
alias -g NUL="> /dev/null 2>&1"
alias -g W=" | wc -l"
alias -g F=" | field "
# ZSH
alias mmv='noglob zmv -W'
# An extra ag
alias rg='rg --smart-case'
# General things
alias scpresume='rsync --partial --progress --rsh=ssh --archive'
alias grep='grep --color=auto'
alias cernProxy='ssh -D 8080 -Nf cern'
alias cernProxyDestroy='ps -ef | grep "ssh -D 8080" | grep -v grep | awk '"'"'{print $2}'"'"' | xargs kill'
alias root="root -l"
# Pyp alias
alias pypr="pyp --rerun"
# Environment
#export LSCOLORS="gxfxcxdxbxegedabagacad"
# LHCb
export DLHCB=svn+ssh://svn.cern.ch/reps/lhcbdocs

# Load k.sh
# https://github.com/rimraf/k
if [[ -s "$HOME/dotfiles/zsh/k/k.sh" ]]; then
  source "$HOME/dotfiles/zsh/k/k.sh"
fi

# Platform-dependent aliases
[[ -f ~/.aliases ]] && source ~/.aliases

#######################################################################
# Setting autoloaded functions
#######################################################################
my_zsh_fpath=${HOME}/dotfiles/zsh/autoloaded

fpath=($my_zsh_fpath $fpath)

if [[ -d "$my_zsh_fpath" ]]; then
    for func in $my_zsh_fpath/*; do
        autoload -Uz ${func:t}
    done
fi
unset my_zsh_fpath


if which peco &> /dev/null; then
  function peco_select_history() {
    local tac
    { which gtac &> /dev/null && tac="gtac" } || \
      { which tac &> /dev/null && tac="tac" } || \
      tac="tail -r"
    BUFFER=$(fc -l -n 1 | eval $tac | \
                peco --layout=top-down --query "$LBUFFER")
    CURSOR=$#BUFFER # move cursor
    zle -R -c       # refresh
  }

  zle -N peco_select_history
  bindkey '^R' peco_select_history
fi

# Locales
export LC_ALL="en_US.UTF-8"
export LANG="en_US.UTF-8"
export LANGUAGE="en_US.UTF-8"
export C_CTYPE="en_US.UTF-8"
export LC_NUMERIC="en_US.UTF-8"
export LC_TIME=en"en_US.UTF-8"


#######################################################################
# Machine-dependent things
#######################################################################
# Load machine-dependent rc (if needed)
[[ -f ~/.localrc ]] && source ~/.localrc

#######################################################################
# Python
#######################################################################
[[ -f ~/.pythonrc ]] && export PYTHONSTARTUP=~/.pythonrc


