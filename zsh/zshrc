#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

#######################################################################
# ZSH
#######################################################################
# Last minute binding
bindkey "^[[3~" delete-char

unsetopt SHARE_HISTORY
unsetopt AUTO_NAME_DIRS      # Auto add variable-stored paths to ~ list.
unsetopt COMPLETE_IN_WORD    # Complete from both ends of a word
unsetopt CLOBBER             # Don't overwrite existing files with > and >>
unsetopt PATH_DIRS           # Perform path search even on command names with slashes.
unsetopt FLOW_CONTROL        # Allow C-s and C-q to stop/start the terminal flow

# Report CPU usage for commands running longer than 20 seconds
REPORTTIME=20

#######################################################################
# Aliases
#######################################################################
# Global aliases
alias -g G=" | grep"
alias -g P=" | pyp"
alias -g NUL="> /dev/null 2>&1"
# General things
alias scpresume='rsync --partial --progress --rsh=ssh --archive'
alias grep='grep --color=auto'
alias cernProxy='ssh -D 8080 -Nf cern'
alias cernProxyDestroy='ps -ef | grep "ssh -D 8080" | grep -v grep | awk '"'"'{print $2}'"'"' | xargs kill'
alias root="root -l"
# Alias for git workflow
alias hsc='hack&&ship&&chop'
# Pyp alias
alias pypr="pyp --rerun"
# Environment
#export LSCOLORS="gxfxcxdxbxegedabagacad"
# LHCb
export DLHCB=svn+ssh://svn.cern.ch/reps/lhcbdocs
# Git
alias git-sync-fork="git fetch upstream; git checkout master; git merge upstream/master"
alias git-rebase-fork="git fetch upstream; git checkout master; git rebase upstream/master"

# Platform-dependent aliases
[[ -f ~/.aliases ]] && source ~/.aliases

#######################################################################
# Functions
#######################################################################
function mkc () {
    mkdir -p "$@" && cd "$@"
}

function sdu() {
    du -sk $@ | sort -nr | cut -f2 | sed -e "s/^/\"/g;s/$/\"/g" | xargs du -sh
}

function up() {
        if (( $# != 1 ))
        then
                cd ..
        else
                upstr="." 
                for i in {1..$1}
                do
                        upstr="$upstr/.." 
                done
                cd $upstr
        fi
}

function reducePdf() {
    filename=$(basename "$1")
    filename="${filename%.*}"
    gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dNOPAUSE -dQUIET -dBATCH -sOutputFile=$filename-compressed.pdf $filename.pdf
    mv -f $filename-compressed.pdf $filename.pdf
}

tbrowser () {
  # Check a file has been specified
  if (( $# == 0 )); then
    echo "No file(s) specified."
  else
    # For each file, check it exists
    for i; do
      if [ ! -f $i ]; then
        echo "Could not find file $i"
        return 1;
      fi
    done
    root -l $* $HOME/.scripts/new_browser.C
  fi
}

# Percol

function exists { which $1 &> /dev/null }

if exists percol; then
    function percol_select_history() {
        local tac
        exists gtac && tac="gtac" || { exists tac && tac="tac" || { tac="tail -r" } }
        BUFFER=$(fc -l -n 1 | eval $tac | percol --query "$LBUFFER")
        CURSOR=$#BUFFER         # move cursor
        zle -R -c               # refresh
    }

    zle -N percol_select_history
    bindkey '^R' percol_select_history
fi

# Ranger

if exists ranger; then
    # after ranger quits, cd to the chosen directory.
    function ranger() {
        tempfile='/tmp/chosendir'
        `/usr/bin/which ranger` --choosedir="$tempfile" "${@:-$(pwd)}"
        test -f "$tempfile" &&
        if [ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]; then
            cd -- "$(cat "$tempfile")"
        fi
        rm -f -- "$tempfile"
    }
fi

#######################################################################
# Machine-dependent things
#######################################################################
# Completion for mac
if [ "`uname`" = "Darwin" ]; then
  compctl -f -x 'p[2]' -s "`/bin/ls -d1 /Applications/*/*.app /Applications/*.app | sed 's|^.*/\([^/]*\)\.app.*|\\1|;s/ /\\\\ /g'`" -- open alias run='open -a'
fi

# Load machine-dependent rc (if needed)
[[ -f ~/.localrc ]] && source ~/.localrc

#######################################################################
# Python
#######################################################################
[[ -f ~/.pythonrc ]] && export PYTHONSTARTUP=~/.pythonrc
