alias locateupdate='sudo /usr/libexec/locate.updatedb'
alias dhcpserver='ipconfig getoption en0 server_identifier'
alias smc='/Applications/smcFanControl.app/Contents/Resources/smc'
alias reloadEthernet='sudo kextunload /System/Library/Extensions/IONetworkingFamily.kext/Contents/PlugIns/AppleYukon2.kext;sudo kextload /System/Library/Extensions/IONetworkingFamily.kext/Contents/PlugIns/AppleYukon2.kext'
alias istatRestart='rm -f ~/Library/Preferences/com.bjango.istatmenus.plist && killall SystemUIServer'
alias cleanDsStore='find . -type f -name "*.DS_Store" -ls -delete'

# Quick way to rebuild the Launch Services database and get rid of duplicates in the Open With submenu.
# http://www.leancrew.com/all-this/2013/02/getting-rid-of-open-with-duplicates/
alias fixOpenWith='/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder'

# From http://brettterpstra.com/2013/03/31/a-few-more-of-my-favorite-shell-aliases/
alias tmlog="syslog -F '\$Time \$Message' -k Sender com.apple.backupd-auto -k Time ge -30m | tail -n 1"
alias ip="curl icanhazip.com"
alias stfu="osascript -e 'set volume output muted true'"
alias pip=pip3

# Apps
alias sourcetree='open -a SourceTree .'

# Position screens
alias disphome='displayplacer "id:BF55BD70-2F3C-FBF6-A552-E44A2CE656E4 res:1920x1200 hz:60 color_depth:8 scaling:off origin:(0,0) degree:0" "id:8B78D316-B997-F726-D566-55E188294EBF res:1680x1050 color_depth:4 scaling:on origin:(-1680,0) degree:0"'
alias dispproton='displayplacer "id:BBA903BF-7AAA-9021-7CA4-4FD3D61160ED res:1920x1200 hz:60 color_depth:8 scaling:off origin:(0,0) degree:0" "id:8B78D316-B997-F726-D566-55E188294EBF res:1680x1050 color_depth:4 scaling:on origin:(-1680,462) degree:0"'

# alias vim='mvim'
function vim() {
    files=( "$@" )
    local -a new_window_files
    for file in $files
    do
        case $file in
          /*) ;;  # Absolute path
          *) file="$(pwd)/$file" ;;
        esac
        #echo $file
        for server in `mvim --serverlist` 
        do
            foundfile=`mvim --servername $server --remote-expr "WhichTab('$file')"`
            if [[ $foundfile > 0 ]]
            then
                mvim --servername $server --remote-expr "foreground()"  > /dev/null
                mvim --servername $server --remote-send ":exec \"tabnext $foundfile\" <CR>" > /dev/null
                break
                #return
                #mvim --servername $server --remote-send ":$line <CR>"
            fi
        done
        if [[ $foundfile = 0 ]]
        then
          new_window_files+=($file)
        fi
    done
    # echo $new_window_files
    if [ ${#new_window_files[@]} -ne 0 ]; then
        mvim -p $new_window_files
    fi
}

